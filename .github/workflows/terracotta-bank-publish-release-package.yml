# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Terracotta Bank - Publish Release Package

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly at midnight on Sunday
  workflow_dispatch:
  # release:
  #   types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - name: Install Packages
      run: sudo apt-get install -y libxml2-utils gnupg2

    - name: Import GPG Keys From Ubuntu Keyserver
      run: gpg --keyserver keyserver.ubuntu.com --recv-keys 7E8F1053

    - name: Build WAR with Gradle
      run: ./gradlew clean build -x test

    - name: Fetch Latest Contrast Agent Version
      id: fetch-latest-contrast-agent-version
      run: |
        # Fetch the Maven metadata XML
        curl -s https://repo1.maven.org/maven2/com/contrastsecurity/contrast-agent/maven-metadata.xml -o maven-metadata.xml

        # Extract the latest release version
        LATEST_AGENT_RELEASE_VERSION=$(xmllint --xpath 'string(/metadata/versioning/release)' maven-metadata.xml)

        echo "Latest release version is $LATEST_AGENT_RELEASE_VERSION"
        echo "::set-output name=latest_agent_release_version::$LATEST_AGENT_RELEASE_VERSION"

    - name: Get Latest Release Flag
      id: get-latest-release-flag
      run: |
        echo "Returning Static Value for Now"
        # TODO: Need to add GitHub API call to get latest release tag
        
        LATEST_TAG=v6.1.1
        echo "Latest release tag is $LATEST_TAG"
        echo "::set-output name=latest_tag::$LATEST_TAG"
        
    
    - name: Extract Previous Agent Version From Tag
      id: extract-previous-agent-version-from-tag
      run: |
        LATEST_TAG=${{ steps.get-latest-release-flag.outputs.latest_tag }}
        PREVIOUS_AGENT_RELEASE_VERSION=${LATEST_TAG#v}
        echo "Previous agent version is $PREVIOUS_AGENT_RELEASE_VERSION"
        echo "::set-output name=previous_agent_release_version::$PREVIOUS_AGENT_RELEASE_VERSION"

    - name: Download Latest Release Contrast Agent If Newer
      run: |
        PREVIOUS_AGENT_RELEASE_VERSION=${{ steps.extract-previous-agent-version-from-tag.outputs.previous_agent_release_version }}
        LATEST_AGENT_RELEASE_VERSION=${{ steps.fetch-latest-contrast-agent-version.outputs.latest_agent_release_version }}

        if [ "$LATEST_AGENT_RELEASE_VERSION" != "$PREVIOUS_AGENT_RELEASE_VERSION" ]; then
          echo "Downloading Contrast Agent version $LATEST_AGENT_RELEASE_VERSION"
          wget -O contrast-agent.jar "https://repo1.maven.org/maven2/com/contrastsecurity/contrast-agent/${LATEST_AGENT_RELEASE_VERSION}/contrast-agent-${LATEST_AGENT_RELEASE_VERSION}.jar"
          # wget -O contrast-agent.jar.sha1 "https://repo1.maven.org/maven2/com/contrastsecurity/contrast-agent/${LATEST_AGENT_RELEASE_VERSION}/contrast-agent-${LATEST_AGENT_RELEASE_VERSION}.jar.sha1"
          # gpg --verify contrast-agent.jar
        else
          echo "Already using the latest version: $PREVIOUS_AGENT_RELEASE_VERSION"
          exit 1
        fi

    - name: Prepare Terracotta Bank Release Package
      id: prepare-terracotta-bank-release-package
      run: |
        TERRACOTTA_BANK_VERSION=0.0.1-SNAPSHOT
        LATEST_AGENT_RELEASE_VERSION=${{ steps.fetch-latest-contrast-agent-version.outputs.latest_agent_release_version }}
        mkdir release
        cp build/libs/terracotta-bank-servlet-${TERRACOTTA_BANK_VERSION}.war release/terracotta.war
        cp contrast-agent.jar release/
        # cp scripts/* release
        zip -r terracotta-release.zip release/

    - name: Create Terracotta Bank Release
      id: create-terracotta-bank-release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: true
        files: |
          terracotta-release.zip
  
  test-linux:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download release package
        run: wget https://github.com/Contrast-Security-OSS/demo-terracotta-bank/releases/download/v6.2.0/terracotta-release.zip

      - name: Unzip release package
        run: unzip terracotta-release.zip -d ./release

      - name: Test Start Script on Linux
        run: |
          ./release/start.sh

      - name: Check Application on Port 8080 (Development)
        run: |
          curl --fail http://localhost:8080 || exit 1
      - name: Check Application on Port 8082 (Production)
        run: |
          curl --fail http://localhost:8082 || exit 1

      - name: Test Stop Script on Linux
        run: ./release/stop.sh
        
  test-macos:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download release package
        run: curl -L https://github.com/Contrast-Security-OSS/demo-terracotta-bank/releases/download/v6.2.0/terracotta-release.zip -o terracotta-release.zip

      - name: Unzip release package
        run: unzip terracotta-release.zip -d ./release

      - name: Test Start Script on MacOS
        run: |
          ./release/start.sh

      - name: Check Application on Port 8080 (Development)
        run: |
          curl --fail http://localhost:8080 || exit 1
          
      - name: Check Application on Port 8082 (Production)
        run: |
          curl --fail http://localhost:8082 || exit 1

      - name: Test Stop Script on MacOS
        run: ./release/stop.sh
  
  test-windows:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download release package
        run: Invoke-WebRequest -Uri https://github.com/Contrast-Security-OSS/demo-terracotta-bank/releases/download/v6.2.0/terracotta-release.zip -OutFile terracotta-release.zip

      - name: Unzip release package
        run: Expand-Archive -Path terracotta-release.zip -DestinationPath ./release

      - name: Test Start Batch Script on Windows
        run: |
          .\release\start.bat

      - name: Check Application on Port 8080 (Development)
        run: |
          (New-Object System.Net.Sockets.TcpClient).Connect('localhost', 8080) || exit 1
      - name: Check Application on Port 8082 (Production)
        run: |
          (New-Object System.Net.Sockets.TcpClient).Connect('localhost', 8082) || exit 1

      - name: Test Stop Batch Script on Windows
        run: .\release\stop.bat

      - name: Test Start PowerShell Script on Windows
        run: |
          .\release\start.ps1

      - name: Test Stop PowerShell Script on Windows
        run: .\release\stop.ps1
